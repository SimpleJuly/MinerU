version: '3'

services:
  mineru-api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - mineru_data:/app/api/output
      # 增加模型缓存挂载点，避免每次重建容器都要重新下载
      - model_cache:/root/.cache
      # 挂载YOLO模型目录，确保模型持久化
      - yolo_models:/app/magic_pdf/resources/models/Layout/YOLO
      # 挂载表格识别模型目录
      - table_models:/app/magic_pdf/resources/models/TabRec/RapidTable
    environment:
      - TZ=Asia/Shanghai
      # 强制使用CPU模式
      - CUDA_VISIBLE_DEVICES=
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:32
      # 禁用各种线程和内存相关的设置
      - OMP_NUM_THREADS=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONFAULTHANDLER=1
      - ORT_DISABLE_THREADS_AFFINITY=999
      - NUMPY_EXPERIMENTAL_ARRAY_FUNCTION=0
      - OMP_WAIT_POLICY=PASSIVE
      - OMP_PROC_BIND=FALSE
      - OMP_DYNAMIC=FALSE
      - OMP_PLACES=CORES
      - LOG_LEVEL=DEBUG
    restart: unless-stopped
    # 健康检查确保服务正常运行
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/tasks"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # 资源限制，根据实际服务器情况调整
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2'
        # 删除所有GPU相关配置

volumes:
  mineru_data:
    # 使用命名卷存储解析结果，防止容器重启后数据丢失
  model_cache:
    # 存储模型缓存，避免重复下载
  yolo_models:
    # 存储YOLO模型权重
  table_models:
    # 存储表格识别模型权重 